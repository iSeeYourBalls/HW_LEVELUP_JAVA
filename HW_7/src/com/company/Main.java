package com.company;

public class Main {
    public static void main(String[] args) {
        Lib program = new Lib();
    /*
    1. Составить программу, которая в зависимости от порядкового номера месяца (1, 2, ..., 12) выводит на экран количество дней в этом месяце. Рассмотреть два случая:
    1) год не является високосным;
    2) год может быть високосным (информация об этом вводится в аргументы при запуске программы).
     */
        program.countDaysInMouth(Integer.parseInt(args[0]));
        program.countDaysInMouth2(Integer.parseInt(args[0]));
    /*
    2. Мастям игральных карт условно присвоены следующие порядковые номера:
    масти "пики" — 1, масти "трефы" — 2, масти "бубны" — 3, масти "червы" — 4,
    а достоинству карт: "валету" — 11, "даме" — 12, "королю" — 13, "тузу" — 14
    (порядковые номера карт остальных достоинств соответствуют их названиям:
    "шестерка", "девятка" и т. п.). По заданным номеру масти m (1 <= m <=  4)
    и номеру достоинства карты k (6 <= k <= 14) определить полное название (масть и достоинство)
    соответствующей карты в виде "Дама пик", "Шестерка бубен" и т. п.
     */
        for (int i = 1; i < 5; i++) {
            for (int j = 6; j < 15; j++) {
                program.getCard(i, j);
            }
        }
        /*
    3. Дано целое число k (1 <= k <= 365). Определить, каким днем недели (понедельником, вторником, ..., субботой или воскресеньем) является k-й день невисокосного года, в котором 1 января:
    а) понедельник;
    б) i-й день недели (если 1 января — понедельник, то d=1 , если вторник — d=2, ..., если воскресенье —  d= 7).
     */
        program.getDayName(30);
    /*
    4. Напишите программу для перевода чисел от 1 до 10 в строковое значение. Например, для числа 1 результатом будет строка “one”.
    */
        program.translateInt();
    /*
    5. Дана строка. Написать программу, которая возвращает строку, написанную в обратном порядке.
    */
        program.crazyString("Winter");
    /*
    6. Дан email в виде строки. Написать программу для проверки email на валидность. email должен соответствовать условию (пример - emailaddr@domain.zone)
    1)	emailaddr > 4 символов
    2)	1 < domain < 10
    3)	2 <= zone < 5
     При любом несовпадении с условием выводим в консоль сообщение с указанием на конкретную ошибку.
     */
        System.out.println(program.checkEmail("emailaddr@domain.zone")); //emailaddr@domain.zone
    /*
    7. Дан массив строк. Написать программу, которая:
    а) выводит на экран значение всех строк через запятую, длина которых больше n.
    б) выводит на экран значение всех неповторяющихся строк через запятую.
     */
        String [] arr = {"test", "test", "summer", "miracle"};

        program.forString(arr);
     /*
     //8. В файле Mouth.java
     9.Создать класс Book с полями:
     name (строка), bookType (перечисление), author (строка), year (целое число).
     Написать конструктор со всеми параметрами.
     Опишите с помощью enum тип данных для хранения литературных жанров
     (роман, сказка, комедия, драма, научная фантастика, детектив).
     Создать объекты класса книга (число объектов соответствует числу жанров).
     */
        Book fairyTale = new Book("Песнь льда и пламени","Джорж Мартин", 1996, BookType.fairyTale);
        Book drama = new Book("Ромео и Джульетта","Уильям Шекспир", 1595, BookType.drama);
        Book scienceFiction = new Book("Красный Марс","Ким Стэнли Робинсон", 1993, BookType.scienceFiction);
        Book comedy = new Book("Двенадцать стульев","Илья Ильф, Евгений Петров", 1928, BookType.comedy);
        Book novel = new Book("Дневник памяти","Николас Спарке", 1996, BookType.novel);
        Book detective = new Book("Песнь льда и пламени","Джорж Мартин", 1996, BookType.detective);
    }
}
